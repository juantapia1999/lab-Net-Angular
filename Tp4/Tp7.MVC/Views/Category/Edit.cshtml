@model Tp7.MVC.Models.FormViewModel.CategoryFormModel

@{
    ViewBag.Title = "Editar Categoria";
}

<h2>Editar Categoria</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="CategoryName">Nombre de Categoria<span style="color:red">*</span>:</label>
        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", minlength = 3, required = string.Empty, maxlength = 15 } })
        @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Description">Descripcion:</label>
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-outline-success" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>
@if (ViewBag.Message != null)
{
    <div class="alert alert-success" role="alert" style="border:1px solid green">@ViewBag.Message @Html.ActionLink("Ver listado", "Index", "Category")</div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert" style="border:1px solid red">Server Message: <br />@ViewBag.ErrorMessage</div>
}